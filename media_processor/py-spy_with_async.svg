<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="698" onload="init(evt)" viewBox="0 0 1200 698" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="698" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 41576 --output py-spy_with_async.svg</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="687.00"> </text><svg id="frames" x="10" width="1180" total_samples="15"><g><title>_call_connection_lost (asyncio/selector_events.py:984) (1 samples, 6.67%)</title><rect x="0.0000%" y="196" width="6.6667%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="206.50">_call_con..</text></g><g><title>_call_connection_lost (asyncio/selector_events.py:742) (1 samples, 6.67%)</title><rect x="0.0000%" y="212" width="6.6667%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="222.50">_call_con..</text></g><g><title>connection_lost (uvicorn/protocols/http/h11_impl.py:112) (1 samples, 6.67%)</title><rect x="0.0000%" y="228" width="6.6667%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="238.50">connectio..</text></g><g><title>our_state (h11/_connection.py:210) (1 samples, 6.67%)</title><rect x="0.0000%" y="244" width="6.6667%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="254.50">our_state..</text></g><g><title>_read_ready (asyncio/selector_events.py:819) (1 samples, 6.67%)</title><rect x="6.6667%" y="196" width="6.6667%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="6.9167%" y="206.50">_read_rea..</text></g><g><title>_read_ready__data_received (asyncio/selector_events.py:876) (1 samples, 6.67%)</title><rect x="6.6667%" y="212" width="6.6667%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="6.9167%" y="222.50">_read_rea..</text></g><g><title>data_received (uvicorn/protocols/http/h11_impl.py:162) (1 samples, 6.67%)</title><rect x="6.6667%" y="228" width="6.6667%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="6.9167%" y="238.50">data_rece..</text></g><g><title>handle_events (uvicorn/protocols/http/h11_impl.py:245) (1 samples, 6.67%)</title><rect x="6.6667%" y="244" width="6.6667%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="6.9167%" y="254.50">handle_ev..</text></g><g><title>create_task (asyncio/base_events.py:438) (1 samples, 6.67%)</title><rect x="6.6667%" y="260" width="6.6667%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="6.9167%" y="270.50">create_ta..</text></g><g><title>extract_stack (traceback.py:227) (1 samples, 6.67%)</title><rect x="6.6667%" y="276" width="6.6667%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="6.9167%" y="286.50">extract_s..</text></g><g><title>extract (traceback.py:383) (1 samples, 6.67%)</title><rect x="6.6667%" y="292" width="6.6667%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="6.9167%" y="302.50">extract (..</text></g><g><title>line (traceback.py:306) (1 samples, 6.67%)</title><rect x="6.6667%" y="308" width="6.6667%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="6.9167%" y="318.50">line (tra..</text></g><g><title>getline (linecache.py:30) (1 samples, 6.67%)</title><rect x="6.6667%" y="324" width="6.6667%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="6.9167%" y="334.50">getline (..</text></g><g><title>getlines (linecache.py:46) (1 samples, 6.67%)</title><rect x="6.6667%" y="340" width="6.6667%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="6.9167%" y="350.50">getlines ..</text></g><g><title>updatecache (linecache.py:137) (1 samples, 6.67%)</title><rect x="6.6667%" y="356" width="6.6667%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="6.9167%" y="366.50">updatecac..</text></g><g><title>decode (codecs.py:322) (1 samples, 6.67%)</title><rect x="6.6667%" y="372" width="6.6667%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="6.9167%" y="382.50">decode (c..</text></g><g><title>_set_result_unless_cancelled (asyncio/futures.py:313) (1 samples, 6.67%)</title><rect x="13.3333%" y="196" width="6.6667%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="13.5833%" y="206.50">_set_resu..</text></g><g><title>call_soon (asyncio/base_events.py:757) (1 samples, 6.67%)</title><rect x="13.3333%" y="212" width="6.6667%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="13.5833%" y="222.50">call_soon..</text></g><g><title>_call_soon (asyncio/base_events.py:773) (1 samples, 6.67%)</title><rect x="13.3333%" y="228" width="6.6667%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="13.5833%" y="238.50">_call_soo..</text></g><g><title>__init__ (asyncio/events.py:41) (1 samples, 6.67%)</title><rect x="13.3333%" y="244" width="6.6667%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="13.5833%" y="254.50">__init__ ..</text></g><g><title>extract_stack (asyncio/format_helpers.py:72) (1 samples, 6.67%)</title><rect x="13.3333%" y="260" width="6.6667%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="1"/><text x="13.5833%" y="270.50">extract_s..</text></g><g><title>extract (traceback.py:370) (1 samples, 6.67%)</title><rect x="13.3333%" y="276" width="6.6667%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="1"/><text x="13.5833%" y="286.50">extract (..</text></g><g><title>format (logging/__init__.py:678) (1 samples, 6.67%)</title><rect x="20.0000%" y="644" width="6.6667%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="20.2500%" y="654.50">format (l..</text></g><g><title>getMessage (logging/__init__.py:366) (1 samples, 6.67%)</title><rect x="20.0000%" y="660" width="6.6667%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="20.2500%" y="670.50">getMessag..</text></g><g><title>run_asgi (uvicorn/protocols/http/h11_impl.py:398) (2 samples, 13.33%)</title><rect x="20.0000%" y="196" width="13.3333%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="2"/><text x="20.2500%" y="206.50">run_asgi (uvicorn/pr..</text></g><g><title>__call__ (uvicorn/middleware/proxy_headers.py:70) (2 samples, 13.33%)</title><rect x="20.0000%" y="212" width="13.3333%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="2"/><text x="20.2500%" y="222.50">__call__ (uvicorn/mi..</text></g><g><title>__call__ (fastapi/applications.py:1054) (2 samples, 13.33%)</title><rect x="20.0000%" y="228" width="13.3333%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="2"/><text x="20.2500%" y="238.50">__call__ (fastapi/ap..</text></g><g><title>__call__ (starlette/applications.py:123) (2 samples, 13.33%)</title><rect x="20.0000%" y="244" width="13.3333%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="2"/><text x="20.2500%" y="254.50">__call__ (starlette/..</text></g><g><title>__call__ (starlette/middleware/errors.py:164) (2 samples, 13.33%)</title><rect x="20.0000%" y="260" width="13.3333%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="2"/><text x="20.2500%" y="270.50">__call__ (starlette/..</text></g><g><title>__call__ (starlette/middleware/cors.py:85) (2 samples, 13.33%)</title><rect x="20.0000%" y="276" width="13.3333%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="2"/><text x="20.2500%" y="286.50">__call__ (starlette/..</text></g><g><title>__call__ (starlette/middleware/exceptions.py:65) (2 samples, 13.33%)</title><rect x="20.0000%" y="292" width="13.3333%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="2"/><text x="20.2500%" y="302.50">__call__ (starlette/..</text></g><g><title>wrapped_app (starlette/_exception_handler.py:53) (2 samples, 13.33%)</title><rect x="20.0000%" y="308" width="13.3333%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="2"/><text x="20.2500%" y="318.50">wrapped_app (starlet..</text></g><g><title>__call__ (starlette/routing.py:756) (2 samples, 13.33%)</title><rect x="20.0000%" y="324" width="13.3333%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="2"/><text x="20.2500%" y="334.50">__call__ (starlette/..</text></g><g><title>app (starlette/routing.py:776) (2 samples, 13.33%)</title><rect x="20.0000%" y="340" width="13.3333%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="2"/><text x="20.2500%" y="350.50">app (starlette/routi..</text></g><g><title>handle (starlette/routing.py:297) (2 samples, 13.33%)</title><rect x="20.0000%" y="356" width="13.3333%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="2"/><text x="20.2500%" y="366.50">handle (starlette/ro..</text></g><g><title>app (starlette/routing.py:77) (2 samples, 13.33%)</title><rect x="20.0000%" y="372" width="13.3333%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="2"/><text x="20.2500%" y="382.50">app (starlette/routi..</text></g><g><title>wrapped_app (starlette/_exception_handler.py:53) (2 samples, 13.33%)</title><rect x="20.0000%" y="388" width="13.3333%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="2"/><text x="20.2500%" y="398.50">wrapped_app (starlet..</text></g><g><title>app (starlette/routing.py:72) (2 samples, 13.33%)</title><rect x="20.0000%" y="404" width="13.3333%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="2"/><text x="20.2500%" y="414.50">app (starlette/routi..</text></g><g><title>app (fastapi/routing.py:282) (2 samples, 13.33%)</title><rect x="20.0000%" y="420" width="13.3333%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="2"/><text x="20.2500%" y="430.50">app (fastapi/routing..</text></g><g><title>run_endpoint_function (fastapi/routing.py:191) (2 samples, 13.33%)</title><rect x="20.0000%" y="436" width="13.3333%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="2"/><text x="20.2500%" y="446.50">run_endpoint_functio..</text></g><g><title>upload_video (app.py:55) (2 samples, 13.33%)</title><rect x="20.0000%" y="452" width="13.3333%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="2"/><text x="20.2500%" y="462.50">upload_video (app.py..</text></g><g><title>stream (starlette/requests.py:229) (2 samples, 13.33%)</title><rect x="20.0000%" y="468" width="13.3333%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="2"/><text x="20.2500%" y="478.50">stream (starlette/re..</text></g><g><title>receive (uvicorn/protocols/http/h11_impl.py:525) (2 samples, 13.33%)</title><rect x="20.0000%" y="484" width="13.3333%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="2"/><text x="20.2500%" y="494.50">receive (uvicorn/pro..</text></g><g><title>resume_reading (uvicorn/protocols/http/flow_control.py:29) (2 samples, 13.33%)</title><rect x="20.0000%" y="500" width="13.3333%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="2"/><text x="20.2500%" y="510.50">resume_reading (uvic..</text></g><g><title>resume_reading (asyncio/selector_events.py:816) (2 samples, 13.33%)</title><rect x="20.0000%" y="516" width="13.3333%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="2"/><text x="20.2500%" y="526.50">resume_reading (asyn..</text></g><g><title>debug (logging/__init__.py:1465) (2 samples, 13.33%)</title><rect x="20.0000%" y="532" width="13.3333%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="2"/><text x="20.2500%" y="542.50">debug (logging/__ini..</text></g><g><title>_log (logging/__init__.py:1624) (2 samples, 13.33%)</title><rect x="20.0000%" y="548" width="13.3333%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="2"/><text x="20.2500%" y="558.50">_log (logging/__init..</text></g><g><title>handle (logging/__init__.py:1634) (2 samples, 13.33%)</title><rect x="20.0000%" y="564" width="13.3333%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="2"/><text x="20.2500%" y="574.50">handle (logging/__in..</text></g><g><title>callHandlers (logging/__init__.py:1696) (2 samples, 13.33%)</title><rect x="20.0000%" y="580" width="13.3333%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="2"/><text x="20.2500%" y="590.50">callHandlers (loggin..</text></g><g><title>handle (logging/__init__.py:968) (2 samples, 13.33%)</title><rect x="20.0000%" y="596" width="13.3333%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="2"/><text x="20.2500%" y="606.50">handle (logging/__in..</text></g><g><title>emit (logging/__init__.py:1100) (2 samples, 13.33%)</title><rect x="20.0000%" y="612" width="13.3333%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="2"/><text x="20.2500%" y="622.50">emit (logging/__init..</text></g><g><title>format (logging/__init__.py:943) (2 samples, 13.33%)</title><rect x="20.0000%" y="628" width="13.3333%" height="15" fill="rgb(250,213,24)" fg:x="3" fg:w="2"/><text x="20.2500%" y="638.50">format (logging/__in..</text></g><g><title>format (logging/__init__.py:680) (1 samples, 6.67%)</title><rect x="26.6667%" y="644" width="6.6667%" height="15" fill="rgb(247,123,22)" fg:x="4" fg:w="1"/><text x="26.9167%" y="654.50">format (l..</text></g><g><title>formatTime (logging/__init__.py:615) (1 samples, 6.67%)</title><rect x="26.6667%" y="660" width="6.6667%" height="15" fill="rgb(231,138,38)" fg:x="4" fg:w="1"/><text x="26.9167%" y="670.50">formatTim..</text></g><g><title>sleep (asyncio/tasks.py:601) (1 samples, 6.67%)</title><rect x="33.3333%" y="244" width="6.6667%" height="15" fill="rgb(231,145,46)" fg:x="5" fg:w="1"/><text x="33.5833%" y="254.50">sleep (as..</text></g><g><title>call_later (asyncio/base_events.py:721) (1 samples, 6.67%)</title><rect x="33.3333%" y="260" width="6.6667%" height="15" fill="rgb(251,118,11)" fg:x="5" fg:w="1"/><text x="33.5833%" y="270.50">call_late..</text></g><g><title>call_at (asyncio/base_events.py:736) (1 samples, 6.67%)</title><rect x="33.3333%" y="276" width="6.6667%" height="15" fill="rgb(217,147,25)" fg:x="5" fg:w="1"/><text x="33.5833%" y="286.50">call_at (..</text></g><g><title>__init__ (asyncio/events.py:105) (1 samples, 6.67%)</title><rect x="33.3333%" y="292" width="6.6667%" height="15" fill="rgb(247,81,37)" fg:x="5" fg:w="1"/><text x="33.5833%" y="302.50">__init__ ..</text></g><g><title>__init__ (asyncio/events.py:41) (1 samples, 6.67%)</title><rect x="33.3333%" y="308" width="6.6667%" height="15" fill="rgb(209,12,38)" fg:x="5" fg:w="1"/><text x="33.5833%" y="318.50">__init__ ..</text></g><g><title>extract_stack (asyncio/format_helpers.py:72) (1 samples, 6.67%)</title><rect x="33.3333%" y="324" width="6.6667%" height="15" fill="rgb(227,1,9)" fg:x="5" fg:w="1"/><text x="33.5833%" y="334.50">extract_s..</text></g><g><title>extract (traceback.py:379) (1 samples, 6.67%)</title><rect x="33.3333%" y="340" width="6.6667%" height="15" fill="rgb(248,47,43)" fg:x="5" fg:w="1"/><text x="33.5833%" y="350.50">extract (..</text></g><g><title>checkcache (linecache.py:72) (1 samples, 6.67%)</title><rect x="33.3333%" y="356" width="6.6667%" height="15" fill="rgb(221,10,30)" fg:x="5" fg:w="1"/><text x="33.5833%" y="366.50">checkcach..</text></g><g><title>&lt;module&gt; (app.py:67) (7 samples, 46.67%)</title><rect x="0.0000%" y="68" width="46.6667%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="7"/><text x="0.2500%" y="78.50">&lt;module&gt; (app.py:67)</text></g><g><title>run (uvicorn/main.py:577) (7 samples, 46.67%)</title><rect x="0.0000%" y="84" width="46.6667%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="94.50">run (uvicorn/main.py:577)</text></g><g><title>run (uvicorn/server.py:65) (7 samples, 46.67%)</title><rect x="0.0000%" y="100" width="46.6667%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="7"/><text x="0.2500%" y="110.50">run (uvicorn/server.py:65)</text></g><g><title>run (asyncio/runners.py:44) (7 samples, 46.67%)</title><rect x="0.0000%" y="116" width="46.6667%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="126.50">run (asyncio/runners.py:44)</text></g><g><title>run_until_complete (asyncio/base_events.py:636) (7 samples, 46.67%)</title><rect x="0.0000%" y="132" width="46.6667%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="7"/><text x="0.2500%" y="142.50">run_until_complete (asyncio/base_events.py:636)</text></g><g><title>run_forever (asyncio/base_events.py:603) (7 samples, 46.67%)</title><rect x="0.0000%" y="148" width="46.6667%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="7"/><text x="0.2500%" y="158.50">run_forever (asyncio/base_events.py:603)</text></g><g><title>_run_once (asyncio/base_events.py:1901) (7 samples, 46.67%)</title><rect x="0.0000%" y="164" width="46.6667%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="7"/><text x="0.2500%" y="174.50">_run_once (asyncio/base_events.py:1901)</text></g><g><title>_run (asyncio/events.py:80) (7 samples, 46.67%)</title><rect x="0.0000%" y="180" width="46.6667%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="7"/><text x="0.2500%" y="190.50">_run (asyncio/events.py:80)</text></g><g><title>serve (uvicorn/server.py:69) (2 samples, 13.33%)</title><rect x="33.3333%" y="196" width="13.3333%" height="15" fill="rgb(216,154,8)" fg:x="5" fg:w="2"/><text x="33.5833%" y="206.50">serve (uvicorn/serve..</text></g><g><title>_serve (uvicorn/server.py:87) (2 samples, 13.33%)</title><rect x="33.3333%" y="212" width="13.3333%" height="15" fill="rgb(244,35,45)" fg:x="5" fg:w="2"/><text x="33.5833%" y="222.50">_serve (uvicorn/serv..</text></g><g><title>main_loop (uvicorn/server.py:228) (2 samples, 13.33%)</title><rect x="33.3333%" y="228" width="13.3333%" height="15" fill="rgb(251,115,12)" fg:x="5" fg:w="2"/><text x="33.5833%" y="238.50">main_loop (uvicorn/s..</text></g><g><title>sleep (asyncio/tasks.py:607) (1 samples, 6.67%)</title><rect x="40.0000%" y="244" width="6.6667%" height="15" fill="rgb(240,54,50)" fg:x="6" fg:w="1"/><text x="40.2500%" y="254.50">sleep (as..</text></g><g><title>cancel (asyncio/events.py:151) (1 samples, 6.67%)</title><rect x="40.0000%" y="260" width="6.6667%" height="15" fill="rgb(233,84,52)" fg:x="6" fg:w="1"/><text x="40.2500%" y="270.50">cancel (a..</text></g><g><title>cancel (asyncio/events.py:71) (1 samples, 6.67%)</title><rect x="40.0000%" y="276" width="6.6667%" height="15" fill="rgb(207,117,47)" fg:x="6" fg:w="1"/><text x="40.2500%" y="286.50">cancel (a..</text></g><g><title>__repr__ (asyncio/events.py:61) (1 samples, 6.67%)</title><rect x="40.0000%" y="292" width="6.6667%" height="15" fill="rgb(249,43,39)" fg:x="6" fg:w="1"/><text x="40.2500%" y="302.50">__repr__ ..</text></g><g><title>_repr_info (asyncio/events.py:112) (1 samples, 6.67%)</title><rect x="40.0000%" y="308" width="6.6667%" height="15" fill="rgb(209,38,44)" fg:x="6" fg:w="1"/><text x="40.2500%" y="318.50">_repr_inf..</text></g><g><title>_repr_info (asyncio/events.py:51) (1 samples, 6.67%)</title><rect x="40.0000%" y="324" width="6.6667%" height="15" fill="rgb(236,212,23)" fg:x="6" fg:w="1"/><text x="40.2500%" y="334.50">_repr_inf..</text></g><g><title>_format_callback_source (asyncio/format_helpers.py:23) (1 samples, 6.67%)</title><rect x="40.0000%" y="340" width="6.6667%" height="15" fill="rgb(242,79,21)" fg:x="6" fg:w="1"/><text x="40.2500%" y="350.50">_format_c..</text></g><g><title>_format_callback (asyncio/format_helpers.py:56) (1 samples, 6.67%)</title><rect x="40.0000%" y="356" width="6.6667%" height="15" fill="rgb(211,96,35)" fg:x="6" fg:w="1"/><text x="40.2500%" y="366.50">_format_c..</text></g><g><title>_format_args_and_kwargs (asyncio/format_helpers.py:38) (1 samples, 6.67%)</title><rect x="40.0000%" y="372" width="6.6667%" height="15" fill="rgb(253,215,40)" fg:x="6" fg:w="1"/><text x="40.2500%" y="382.50">_format_a..</text></g><g><title>&lt;genexpr&gt; (asyncio/format_helpers.py:38) (1 samples, 6.67%)</title><rect x="40.0000%" y="388" width="6.6667%" height="15" fill="rgb(211,81,21)" fg:x="6" fg:w="1"/><text x="40.2500%" y="398.50">&lt;genexpr&gt;..</text></g><g><title>repr (reprlib.py:52) (1 samples, 6.67%)</title><rect x="40.0000%" y="404" width="6.6667%" height="15" fill="rgb(208,190,38)" fg:x="6" fg:w="1"/><text x="40.2500%" y="414.50">repr (rep..</text></g><g><title>_worker (concurrent/futures/thread.py:81) (5 samples, 33.33%)</title><rect x="46.6667%" y="116" width="33.3333%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="5"/><text x="46.9167%" y="126.50">_worker (concurrent/futures/thread.py:81)</text></g><g><title>__getitem__ (email/message.py:391) (1 samples, 6.67%)</title><rect x="86.6667%" y="164" width="6.6667%" height="15" fill="rgb(237,122,38)" fg:x="13" fg:w="1"/><text x="86.9167%" y="174.50">__getitem..</text></g><g><title>get (email/message.py:471) (1 samples, 6.67%)</title><rect x="86.6667%" y="180" width="6.6667%" height="15" fill="rgb(244,218,35)" fg:x="13" fg:w="1"/><text x="86.9167%" y="190.50">get (emai..</text></g><g><title>header_fetch_parse (email/policy.py:163) (1 samples, 6.67%)</title><rect x="86.6667%" y="196" width="6.6667%" height="15" fill="rgb(240,68,47)" fg:x="13" fg:w="1"/><text x="86.9167%" y="206.50">header_fe..</text></g><g><title>__call__ (email/headerregistry.py:604) (1 samples, 6.67%)</title><rect x="86.6667%" y="212" width="6.6667%" height="15" fill="rgb(210,16,53)" fg:x="13" fg:w="1"/><text x="86.9167%" y="222.50">__call__ ..</text></g><g><title>__new__ (email/headerregistry.py:192) (1 samples, 6.67%)</title><rect x="86.6667%" y="228" width="6.6667%" height="15" fill="rgb(235,124,12)" fg:x="13" fg:w="1"/><text x="86.9167%" y="238.50">__new__ (..</text></g><g><title>parse (email/headerregistry.py:455) (1 samples, 6.67%)</title><rect x="86.6667%" y="244" width="6.6667%" height="15" fill="rgb(224,169,11)" fg:x="13" fg:w="1"/><text x="86.9167%" y="254.50">parse (em..</text></g><g><title>all (15 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="15"/><text x="0.2500%" y="62.50"></text></g><g><title>_bootstrap (threading.py:973) (8 samples, 53.33%)</title><rect x="46.6667%" y="68" width="53.3333%" height="15" fill="rgb(242,216,29)" fg:x="7" fg:w="8"/><text x="46.9167%" y="78.50">_bootstrap (threading.py:973)</text></g><g><title>_bootstrap_inner (threading.py:1016) (8 samples, 53.33%)</title><rect x="46.6667%" y="84" width="53.3333%" height="15" fill="rgb(230,116,27)" fg:x="7" fg:w="8"/><text x="46.9167%" y="94.50">_bootstrap_inner (threading.py:1016)</text></g><g><title>run (threading.py:953) (8 samples, 53.33%)</title><rect x="46.6667%" y="100" width="53.3333%" height="15" fill="rgb(228,99,48)" fg:x="7" fg:w="8"/><text x="46.9167%" y="110.50">run (threading.py:953)</text></g><g><title>_worker (concurrent/futures/thread.py:83) (3 samples, 20.00%)</title><rect x="80.0000%" y="116" width="20.0000%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="3"/><text x="80.2500%" y="126.50">_worker (concurrent/futures/thr..</text></g><g><title>run (concurrent/futures/thread.py:58) (3 samples, 20.00%)</title><rect x="80.0000%" y="132" width="20.0000%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="3"/><text x="80.2500%" y="142.50">run (concurrent/futures/thread...</text></g><g><title>data_received (streaming_form_data/parser.py:67) (3 samples, 20.00%)</title><rect x="80.0000%" y="148" width="20.0000%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="3"/><text x="80.2500%" y="158.50">data_received (streaming_form_d..</text></g><g><title>finish (streaming_form_data/targets.py:49) (1 samples, 6.67%)</title><rect x="93.3333%" y="164" width="6.6667%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="1"/><text x="93.5833%" y="174.50">finish (s..</text></g><g><title>on_finish (streaming_form_data/targets.py:184) (1 samples, 6.67%)</title><rect x="93.3333%" y="180" width="6.6667%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="1"/><text x="93.5833%" y="190.50">on_finish..</text></g></svg></svg>